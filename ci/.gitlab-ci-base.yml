image: "$BUILD_IMAGE_ANSIBLE_MAVEN_JDK"

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_ACTIVE_PROFILE: "local"

.set_env_variables: &set_env_variables
  - PROJECT_VERSION=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml)

stages:
  - build
  - test
  - publish
  - release

cache:
  key: "$CI_COMMIT_SHA"
  paths:
    - target/

###################
### Stage build ###
###################

.compile:
  before_script: *set_env_variables
  script:
    - echo "Compiling version $PROJECT_VERSION"
    - mvn $MAVEN_CLI_OPTS -U clean compile
  stage: build

compile:
  extends: .compile

compile:openjdk11:
  extends: .compile
  image: "$BUILD_IMAGE_ANSIBLE_MAVEN_JDK11"
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"

compile:openjdk11:libturbjpeg:
  extends: .compile
  image: "$BUILD_IMAGE_ANSIBLE_MAVEN_JDK11_LIBTURBOJPEG"
  only:
    variables:
      - $WITH_LIBTURBOJPEG
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"

##################
### Stage test ###
##################

.verify:
  dependencies:
    - compile
    - compile:openjdk11
  script: mvn $MAVEN_CLI_OPTS -Dspring.profiles.active=$MAVEN_ACTIVE_PROFILE verify
  stage: test

verify:
  extends: .verify

verify:openjdk11:
  extends: .verify
  image: "$BUILD_IMAGE_ANSIBLE_MAVEN_JDK11"
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"

verify:openjdk11:libturbjpeg:
  extends: .verify
  image: "$BUILD_IMAGE_ANSIBLE_MAVEN_JDK11_LIBTURBOJPEG"
  only:
    variables:
      - $WITH_LIBTURBOJPEG
  variables:
    JAVA_HOME: "/usr/lib/jvm/java-11-openjdk-amd64"

verify_codecov:
  only:
    variables:
      - $CODECOV_TOKEN
  script: bash <(curl -s https://codecov.io/bash)
  stage: test

#####################
### Stage publish ###
#####################

.publish:
  before_script: *set_env_variables
  dependencies:
    - verify
  except:
    variables:
      - $NO_PUBLISH
  stage: publish

publish_snapshot:
  extends: .publish
  only:
    - master
  script:
    - if [[ ! "$PROJECT_VERSION" =~ .*SNAPSHOT ]]; then exit 0; fi
    - mvn $MAVEN_CLI_OPTS -T 4 deploy --settings settings.xml

publish_release:
  extends: .publish
  only:
    - tags
  script:
    - if [[ "$PROJECT_VERSION" =~ .*SNAPSHOT ]]; then exit 0; fi
    - mvn $MAVEN_CLI_OPTS -fn -T 4 deploy --settings settings.xml

#####################
### Stage release ###
#####################

.release:
  before_script:
    - git remote rm origin
    - git remote add origin "https://github.com/$CI_PROJECT_PATH.git"
  dependencies:
    - publish_release
  stage: release

github_release:
  extends: .release
  only:
    - tags
  script:
    - if [[ "$CI_COMMIT_TAG" =~ .*RC.* ]]; then exit 0; fi
    - hub release create -m $CI_COMMIT_TAG $(find . -iname "*.jar" -exec echo -a {} \;) -t $CI_COMMIT_SHA $CI_COMMIT_TAG

github_prelease:
  extends: .release
  only:
    - tags
  script:
    - if ! [[ "$CI_COMMIT_TAG" =~ .*RC.* ]]; then exit 0; fi
    - hub release create -m $CI_COMMIT_TAG $(find . -iname "*.jar" -exec echo -a {} \;) -p -t $CI_COMMIT_SHA $CI_COMMIT_TAG
